---
minio:
  existingSecret: sa-icp
  persistence:
    storageClass: glusterfs
  minioConfig:
    region: dontcare
  defaultBucket:
    enabled: false
    name: icptest

kafka:
  persistence:
    enabled: false

ibm-skydive-dev:
  image:
    repository: cognetive/skydive
    tag: amd64-latest
  env:
    # For debug purposes
    - name: SKYDIVE_LOGGING_LEVEL
      value: "INFO"

    # Send flow information to defender back-end
    - name: SKYDIVE_ANALYZER_FLOW_BACKEND
      value: "defender"

    # We do not propagate the topology information, so just keep this in memory (this is being deleted over time)
    - name: SKYDIVE_ANALYZER_TOPOLOGY_BACKEND
      value: "memory"

    # Maximum number of flows per object
    - name: SKYDIVE_STORAGE_DEFENDER_MAX_FLOWS_PER_OBJECT
      value: "6000"

    # Flows to be updated every 30 seconds (thus, every 60 seconds to defender)
    - name: SKYDIVE_FLOW_UPDATE
      value: "30"

    # Maximum seconds per object
    - name: SKYDIVE_STORAGE_DEFENDER_MAX_SECONDS_PER_OBJECT
      value: "60"

    # Maximum seconds per stream
    - name: SKYDIVE_STORAGE_DEFENDER_MAX_SECONDS_PER_STREAM
      value: "600"

    # Object-storage endpoint (COS / S3)
    - name: SKYDIVE_STORAGE_DEFENDER_ENDPOINT
      value: "http://sa-icp:9000"

    # Object-storage endpoint (COS / S3)
    - name: SKYDIVE_STORAGE_DEFENDER_ACCESS_KEY
      value: "admin"

    # Object-storage endpoint (COS / S3)
    - name: SKYDIVE_STORAGE_DEFENDER_SECRET_KEY
      value: "admin1234"

    # Object-storage bucket
    - name: SKYDIVE_STORAGE_DEFENDER_BUCKET
      value: "icptest"

    # Object-storage region
    - name: SKYDIVE_STORAGE_DEFENDER_REGION
      value: "dontcare"

    # Object-storage kubernetes cluster guid
    - name: SKYDIVE_STORAGE_DEFENDER_KUBERNETES_GUID
      value: "icpsomGuid12363635"

    # ?
    - name: SKYDIVE_STORAGE_DEFENDER_DRIVER
      value: defender

    # COLLECTION (as defined in the defender API)
    - name: SKYDIVE_STORAGE_DEFENDER_COLLECTION
      value: "netflow"

    # ANALYZER_STARTUP_CAPTURE_GREMLIN invoke at startup capturing in selected nodes
    - name: SKYDIVE_ANALYZER_STARTUP_CAPTURE_GREMLIN
      value: "G.V().has('Name', NE('lo'))"

    - name: SKYDIVE_ANALYZER_STARTUP_CAPTURE_BPF
      value: "not (tcp dst port 8082 or tcp dst port 9000)"

    - name: SKYDIVEX_AGENT_CAPTURE_SYN
      value: "True"

    # DEFAULT_LAYER_KEY_MODE - the layers used to identify a unique flow.
    - name: SKYDIVE_FLOW_DEFAULT_LAYER_KEY_MODE
      value: "L3"

    # IP Address of the cluster -  on icp - private masks (10.., 172.., 192..), pod ips/32, external ip/29 (use curl https://api.ipify.org from a node)
    - name: SKYDIVE_STORAGE_DEFENDER_CLUSTER_NET_MASKS
      value: "10.0.0.0/8 172.16.0.0/12 192.168.0.0/16 9.148.245.189/32 9.148.245.182/32 9.148.244.224/32 9.148.244.124/32 9.148.245.28/32 159.8.66.226/29"

    - name: SKYDIVE_ANALYZER_STARTUP_CAPTURE_TYPE
      value: "pcap"

    - name: SKYDIVE_AGENT_CAPTURE_SYN
      value: "True"

datacontrol:
  global:
    # env refers to the environment properties belong to during build-time. Default is "development".
    env: development
    registryNamespace: secadvisor_dev #secadv_dev
    name: datacontrol
    tag: 18 #20 #18 #106 #0.0.106  # 18 is a good working version for unsecure kafka
    imagePullSecret: 'my-secret'
    statisticsRate: '60000'
    dataSourcesTopicsMapping: '{"netflow_ingress":"netflow_ingress","netflow_egress":"netflow_egress","netflow_internal":"netflow_internal","netflow_other":"netflow_other","at_cadf":"at_cadf"}'
    supportedRegions: 'us-south,us-east,us-west,eu-gb,eu-de,au-syd,jp-tok,other,dontcare'
    accountsApiEndpoint: 'http://iris-bluesecure.sl.cloud9.ibm.com:9002/api/v1/'
    securityAdvisorShardId: 'default_449a6a22-1059-4b96-97cb-0f0dca2d25f3'
    redisDbNum: 1
    redisDbNumDC: 1
    # must match minio.minioConfig.region 
    minioRegion: 'dontcare'
    # must match the access key of the secret defined in minio.existingSecret 
    accessKey: 'admin'
    # must match the secret key of the secret defined in minio.existingSecret 
    secretKey: 'admin1234'
    #'PLAIN' and 'PLAINTEXT' make kafka run in unsecure mode
    kafkaSaalMechanism: 'PLAIN'
    kafkaSecurityProtocol: PLAINTEXT #'SSL'
    kafkaSslTruststoreLocation: certs/
    kafkaSslTruststorePassword: test1234
    # Don't change this value. false means this is a combined helm (redis and minio are subcharts here)
    standalone: false
    #fixed redis port. No need to change this.
    dc_redis_port: '6379'
    # all of the iam configurations are irrelevant in icp, must be set only when installing on bluemix
    iamTokenValidationURL: 'https://iam.test.cloud.ibm.com/identity/keys'
    iamPDPURL: 'https://iam.test.cloud.ibm.com'
    iamTokenURL: 'https://iam.test.cloud.ibm.com/identity/token'
    iamPAPURL: 'https://iam.test.cloud.ibm.com'
    iamConfig: '{"adminService":{"serviceName":"Grafeas-Admin-Service","serviceid":"ServiceId-1d1e8188-8ae6-45a4-b67e-5058a8373638"},"externalService":{"apiKey":"pYgIUhpGO25tN52EtbuzzomqGX_D7h_La8PCD_ELj6cq","serviceName":"Grafeas-External-Service","serviceid":"ServiceId-838121e1-8053-40e0-85d6-43a7d30f110d"},"internalService":{"apiKey":"ZSbLcYWa3iLul8zI4Vc_7tgYN8qG8GF4qmcaFL79713-","serviceName":"Grafeas-Internal-Service","serviceid":"ServiceId-5f4ca4ac-9a64-4bf0-ae03-4ad9a21afe42"},"serviceCname":"staging","viewerService":{"apiKey":"pYgIUhpGO25tN52EtbuzzomqGX_D7h_La8PCD_ELj6cq","serviceName":"security-advisor","serviceid":"ServiceId-838121e1-8053-40e0-85d6-43a7d30f110d"}}'

threatanalytics-v2:
  global:
    # env refers to the environment properties belong to during build-time. Default is "development".
    env: development

    # Threat Intelligence Analytics micro-service properties.
    name: tia
    registryNamespace: secadvisor_dev
    tag: 6 #7 # 6 # 6 is a good stable version for unsecured kafka
    imagePullSecret: 'my-secret'
    consumerGroupId: 'tia-consumer-group-dev'
    consumerTopics: 'netflow_ingress,netflow_egress'
    consumerSupportedDataSources: 'netflow_ingress,netflow_egress'
    consumerRequiredAnalytic: 'tia'
    xfeDbObjectUrl: 'https://s3-api.us-geo.objectstorage.softlayer.net/xfe-ipr-db-1725631/xfe_ipr_db.gz'
    xforceUrlLink: 'https://exchange.xforce.ibmcloud.com/'
    standalone: false
    redis_port: '6379'
    redisDbNum: '2'
    minioRegion: 'dontcare'
    accessKey: 'admin'
    secretKey: 'admin1234'
    useOS: 'minio'
    xfeDbCosIamConfig: '{"iamTokenURL":"https://iam.bluemix.net/identity/token","iamPDPURL":"https://iam.bluemix.net","iamPAPURL":"https://iam.bluemix.net","iamPublicKeysEndpoint":"https://iam.bluemix.net/identity/keys","serviceCname":"TIA-XFE-COS","adminService":{"apiKey":"stlUyXu1a4HOsA57sRSgeFouqbcWbMuB-EWbufrMghdv","serviceName":"TIA-XFE-COS","serviceid":"TIA-XFE-COS"},"externalService":{"apiKey":"stlUyXu1a4HOsA57sRSgeFouqbcWbMuB-EWbufrMghdv","serviceName":"TIA-XFE-COS","serviceid":"TIA-XFE-COS"},"internalService":{"apiKey":"stlUyXu1a4HOsA57sRSgeFouqbcWbMuB-EWbufrMghdv","serviceName":"TIA-XFE-COS","serviceid":"TIA-XFE-COS"},"viewerService":{"apiKey":"stlUyXu1a4HOsA57sRSgeFouqbcWbMuB-EWbufrMghdv","serviceName":"TIA-XFE-COS","serviceid":"TIA-XFE-COS"}}'
    #'PLAIN' and 'PLAINTEXT' make kafka run in unsecure mode
    kafkaSaalMechanism: 'PLAIN'
    kafkaSecurityProtocol: PLAINTEXT #'SSL'
    kafkaSslTruststoreLocation: certs/
    kafkaSslTruststorePassword: test1234
