global:
  #set autoConfig to true to use automatic configuration or set to false + set sa-shard.configmgr.global.shardId and sa-shard.configmgr.global.shardData to custom configuration, that can support multiple remote accounts
  #if autoConfig="true" the shardId and shardData values are ignored
  autoConfig: true
  autoConfigName: "sa-shard-auto-configmap"
  #this is used as template json by the automatic configuration
  shardData: '{"accounts":[{"account_id":"","bucket_url":"","auth":{"type":"AMAZON_S3", "accessKey":"","secretKey":"","region":""},"collect_from":{"netflow_ingress":true,"netflow_egress":true,"netflow_internal":true,"netflow_other":true,"at_cadf":true},"sa_analytics":{"tia":true,"ata":true,"nba":true},"sa_instance_crn":"crn:","sa_analytics_status":{"ata":[{"packageUrl":"https://","num_active_rules":2,"num_dormant_rules":45,"num_illegal_rules":6,"status":"success"}],"dc":{"num_sources_netflow":3,"num_sources_at":1}}}]}'
sa-shard:
  configmgr:
    global:
      shardId: ''
#sa-data-collection:
  #uncomment this when installing on IKS, and set the host value to cluster's ingress-subdomain
  #host:"customerv11.us-south.containers.appdomain.cloud"
