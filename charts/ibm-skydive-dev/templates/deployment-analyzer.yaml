apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}-analyzer
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        productName: {{ .Chart.Name }}
        productID: 8e6bdbcba44f46939c3d1c54447386b2
        productVersion: {{ .Chart.Version }} 
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        tier: analyzer
    spec:
      affinity:
        {{- include "nodeaffinity" . | indent 6 }}
      {{- if .Values.image.secretName }}
      {{- if ne .Values.image.secretName ""}}
      imagePullSecrets:
      - name: {{ .Values.image.secretName }}
      {{- end }}
      {{- end }}      
      containers:
      - name: skydive-analyzer
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ default "" .Values.image.imagePullPolicy | quote }}
        args:
        - analyzer
        - --listen=0.0.0.0:8082
        ports:
        - containerPort: {{ .Values.service.port }}
        - containerPort: {{ .Values.service.port }}
          protocol: UDP
        - containerPort: 12379
        readinessProbe:
          httpGet:
            port: 8082
            path: /api/status
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: 8082
            path: /api/status
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 10
        env:
        - name: SKYDIVE_ANALYZER_TOPOLOGY_PROBES
          value: "k8s"
        - name: SKYDIVE_UI_TOPOLOGY_FAVORITES
          value: '{"infrastructure":"G.V().Has(\"Manager\", NE(\"k8s\"))","kubernetes":"G.V().Has(\"Manager\", \"k8s\")"}'
        - name: SKYDIVE_UI_TOPOLOGY_DEFAULT_FILTER
          value: 'infrastructure'
        - name: SKYDIVE_UI_THEME
          value: "light"
      {{- if .Values.persistence.enabled }}
        - name: SKYDIVE_ANALYZER_FLOW_BACKEND
          value: "elasticsearchflow"
        - name: SKYDIVE_ANALYZER_TOPOLOGY_BACKEND
          value: "elasticsearchtopology"
        - name: SKYDIVE_STORAGE_ELASTICSEARCHFLOW_DRIVER
          value: "elasticsearch"
        - name: SKYDIVE_STORAGE_ELASTICSEARCHTOPOLOGY_DRIVER
          value: "elasticsearch"
        - name: SKYDIVE_STORAGE_ELASTICSEARCHFLOW_HOST
          value: {{ .Values.storage.elasticsearch.host }}
        - name: SKYDIVE_STORAGE_ELASTICSEARCHFLOW_INDICES_TO_KEEP
          value: {{ .Values.storage.flows.indicesToKeep | quote }}
        - name: SKYDIVE_STORAGE_ELASTICSEARCHFLOW_INDEX_ENTRIES_LIMIT
          value: {{ .Values.storage.flows.indexEntriesLimit | quote }}
        - name: SKYDIVE_STORAGE_ELASTICSEARCHFLOW_MAXCONNS
          value: "10"
        - name: SKYDIVE_STORAGE_ELASTICSEARCHFLOW_BULK_MAXDOCS
          value: "1000"
        - name: SKYDIVE_STORAGE_ELASTICSEARCHFLOW_BULK_MAXDELAY
          value: "10"
        - name: SKYDIVE_STORAGE_ELASTICSEARCHFLOW_RETRY
          value: "5"
        - name: SKYDIVE_STORAGE_ELASTICSEARCHTOPOLOGY_HOST
          value: {{ .Values.storage.elasticsearch.host }}
        - name: SKYDIVE_STORAGE_ELASTICSEARCHTOPOLOGY_INDICES_TO_KEEP
          value: {{ .Values.storage.topology.indicesToKeep | quote }}
        - name: SKYDIVE_STORAGE_ELASTICSEARCHTOPOLOGY_INDEX_ENTRIES_LIMIT
          value: {{ .Values.storage.topology.indexEntriesLimit | quote }}
        - name: SKYDIVE_STORAGE_ELASTICSEARCHTOPOLOGY_MAXCONNS
          value: "10"
        - name: SKYDIVE_STORAGE_ELASTICSEARCHTOPOLOGY_BULK_MAXDOCS
          value: "1000"  
        - name: SKYDIVE_STORAGE_ELASTICSEARCHTOPOLOGY_BULK_MAXDELAY
          value: "10"  
        - name: SKYDIVE_STORAGE_ELASTICSEARCHTOPOLOGY_RETRY
          value: "5"  
      {{- end }}
        - name: SKYDIVE_EMBEDDED
          value: "true"
        - name: SKYDIVE_FLOW_PROTOCOL
          value: "websocket"
        - name: SKYDIVE_ANALYZER_TOPOLOGY_FABRIC
          value: {{ .Values.analyzer.topology.fabric }}
      {{- if .Values.env }}
{{ toYaml .Values.env | indent 8 }}
      {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: ssl
          mountPath: /etc/ssl/certs
      volumes:
      - name: ssl
        hostPath:
          path: /etc/ssl/certs

    {{- if .Values.persistence.enabled }}
      - name: skydive-elasticsearch
        image: elasticsearch:2
        ports:
        - containerPort: 9200
        readinessProbe:
          httpGet:
            port: 9200
            path: /
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            port: 9200
            path: /
          initialDelaySeconds: 20
          periodSeconds: 10
          failureThreshold: 10
        env:
        - name: network.host
          value: "0.0.0.0"
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: "{{ template "fullname" . }}-{{ .Values.dataVolume.name }}"
          mountPath: /usr/share/elasticsearch/data
      volumes:
      - name: "{{ template "fullname" . }}-{{ .Values.dataVolume.name }}"   
        persistentVolumeClaim:
        {{- if .Values.dataVolume.existingClaimName }}
          claimName: {{ .Values.dataVolume.existingClaimName }}
        {{- else }}
          claimName: {{ template "fullname" . }}-{{ .Values.dataVolume.name }}
        {{- end }}
    {{- end }}
